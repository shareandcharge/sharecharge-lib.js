# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

defaults: 
  - &stage_defaults
    working_directory: ~/lib

  - &docker_defaults
    image: circleci/node

  - &npm_auth
    run:
      name: npm secret
      command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc

  
jobs:

  build:

    <<: *stage_defaults

    docker:
      - <<: *docker_defaults

    steps:

      - checkout

      - <<: *npm_auth

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - run:
          name: Install Node Modules
          command:
            npm install

      - run:
          name: Install Ganache
          command:
            npm install ganache-cli@6.0.3

      # update cache if needed
      - save_cache:
          key: v2-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules

      - persist_to_workspace:
          root: ~/lib
          paths: .


  test:

    <<: *stage_defaults

    docker:
      - <<: *docker_defaults

    steps:

      - attach_workspace:
          at: ~/lib

      # run rpc
      - run:
          name: Run ganache
          background: true
          command: ./node_modules/.bin/ganache-cli

      # run tests
      - run:
          name: Run tests
          command: npm test

  # run integration tests against geth dev
  staging:  

    <<: *stage_defaults

    docker:
      - <<: *docker_defaults
      - image: ethereum/client-go
        command: [--dev, --dev.period=1, --rpc, --rpcaddr=0.0.0.0]

    steps:

      - attach_workspace:
          at: ~/lib

      - run:
          name: Run test
          command: npm test
  
  transpile:

    <<: *stage_defaults

    docker: 
      - <<: *docker_defaults
    
    steps:

      - attach_workspace:
         at: ~/lib

      - run:
          name: tsc
          command: ./node_modules/.bin/tsc
      
      - persist_to_workspace:
          root: ~/lib
          paths: .

  deploy:

    <<: *stage_defaults

    docker:
      - <<: *docker_defaults

    steps:
      - attach_workspace:
          at: ~/lib

      - <<: *npm_auth

      - run:
          name: npm publish
          command: npm publish

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build:
          context: npm-access
      - test:
          requires:
            - build
      - staging:
          requires:
            - build
      - transpile:
          requires:
            - build
      - deploy:
          context: npm-access
          requires:
            - test
            - staging
            - transpile
